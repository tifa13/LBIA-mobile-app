
package com.DreamInc.dream;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.net.Socket;
import java.net.UnknownHostException;

import android.R.string;
import android.app.Activity;
import android.app.AlertDialog;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.Button;
import android.widget.EditText;
import android.widget.Toast;


public class SecondScreenActivity extends Activity {
	public Server setupconnection = new Server();
	public String[] commands;

	
	
	public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
      setContentView(R.layout.secondscreen);
      Button btnaction1 = (Button) findViewById(R.id.btnaction1);
      String type;
      Intent i = getIntent();
      final String action = i.getStringExtra("action1");
      btnaction1.setText(action);
      if(action.equals("Sign Up"))
      {
    	   type = "su";
      }else{
    	  type = "si";
      }
      final String type2 = type;
      

      
     
        
      
    	  btnaction1.setOnClickListener(new View.OnClickListener() {
    		
  			@Override
  			public void onClick(View arg0) {
  				
  				
  				 final EditText username = (EditText) findViewById(R.id.inputusername);
  			      final EditText password = (EditText) findViewById(R.id.inputpassword);	
  				 String username2 = username.getText().toString();
  			       String password2 = password.getText().toString();
  			      Server.setupconnection();
  		       String assignedname = "ok";
  		       try{
  		    	   
  		     File myFile = new File("/data/data/com.DreamInc.dream/files/yano2.txt"); 
  			 if (myFile.exists()) {
  				    //File exists.
  				 String number;
  				if(type2.equals("su"))
  		      {
  		    	   number = "7";
  		      }else{
  		    	  number = "5";
  		      }
  					FileInputStream fIn = openFileInput("yano2.txt");
  				
                InputStreamReader isr = new InputStreamReader(fIn);
                char[] inputBuffer = new char[2];
                isr.read(inputBuffer);
                assignedname = new String(inputBuffer);
                String firstcommand = number+","+assignedname+",  ,    ,"+username2 +","+password2+".";
                Server.communicate(firstcommand);
	      	     commands= Server.GetCommandsfromData();

  			 }
  				 else {
  				    //File does not exist.
  					 String number1;
  					if(type2.equals("su"))
  	  		      {
  	  		    	   number1 = "7";
  	  		      }else{
  	  		    	  number1 = "5";
  	  		      }
  	                String firstcommand = number1+", ,"+type2+","+username2 +","+password2+".";
  	                Server.communicate(firstcommand);

  	      	       commands= Server.GetCommandsfromData();
					assignedname = commands[0];
  			

  					FileOutputStream fOut = openFileOutput("yano2.txt", 0);				
  					OutputStreamWriter osw = new OutputStreamWriter(fOut);	
  					osw.write(assignedname);
  					 osw.flush();
                     osw.close();
  				 }
  				
  		       }catch (IOException ioe) {
  	             ioe.printStackTrace();
  			 }
  	      
  		     String clear;
  		       int lenght1 = commands.length;
  		       if (lenght1==1){
  		    	  clear = commands[0];
  		       }else{
  		    	   clear = commands[1];
  		       }
  		    	   
  				
  				if(clear.equals("Yes")){
  					
  				
  		      
  		        System.out.println(assignedname);
  		        String secondcommand = assignedname+",s"+".";
  		        
  		        Server.communicate(secondcommand);
  		        
  		          
  		        //String listofdevices = "lamp,door,window,television,";
  		        String[] devicesstatus = Server.GetCommandsfromData();
  		        //String[] devicesstatus = {"lamp,off"};
  		        String devicesstatus1 =devicesstatus[0];
  		        String[] devicesstatus2 = devicesstatus1.split(",");
  		        int length2=(devicesstatus2.length)/2;
  		      String[] listofdevices ;
  		      listofdevices = new String[length2];
  		      String[] listofstatus ;
  		      listofstatus = new String[length2];
  		      int z=0;
  		      int d=1;
  		        for(int i=0;i < length2;i++){
  		        	 listofdevices[i] = devicesstatus2[z];
  		        	 listofstatus[i] = devicesstatus2[d];
  		        	 z=z+2;
  		        	 d=d+2;
  		        	 
  		        }
  		        
  		   
  		     
  		     
  		     
  		        
  		        
  		        
  				Intent screen3 = new Intent(getApplicationContext(), ThirdScreenActivity.class);
  				screen3.putExtra("devicename", assignedname.toString());
  				screen3.putExtra("devices", listofdevices);
  				screen3.putExtra("status", listofstatus);
  				
  				
                startActivity(screen3);
                
  				}else{
  					new AlertDialog.Builder(SecondScreenActivity.this).setTitle("Error").setMessage("Wrong username or passowrd").setNeutralButton("Close", null).show();
  				}
  				}
  		});
      }
	public   void  error()
	{
		new AlertDialog.Builder(SecondScreenActivity.this).setTitle("Error").setMessage("could not connect to sever.").setNeutralButton("Close", null).show();
	}
	
      
      
      
}

class Server extends Activity{
	public static Socket echoSocket = null;
    public static  PrintWriter out = null;
    public static  BufferedReader in = null;
    public static String serverHostname = new String ("10.0.2.2");
   

	public static  void  setupconnection() 
	{
		

        System.out.println ("Attemping to connect to host " +
    			serverHostname + " on port 10008.");
    	               
    	        try {
    	            // echoSocket = new Socket("taranis", 7);
    	        	Log.d(null, "crash");
    	            echoSocket = new Socket(serverHostname, 10008);
    	           

    	            out = new PrintWriter(echoSocket.getOutputStream(), true);
    	            in = new BufferedReader(new InputStreamReader(
                            echoSocket.getInputStream()));
    	            echoSocket.setSoTimeout(1000);
    	            Log.d(null, "msg73");
    	            
    	        } catch (UnknownHostException e) {
    	            System.err.println("Don't know about host: " + serverHostname);
    	            System.exit(1);
    	        } catch (IOException e) {
    	            System.err.println("Couldn't get I/O for "
    	                               + "the connection to: " + serverHostname);
    	            SecondScreenActivity foo = new SecondScreenActivity();
    	            foo.error();
    	           
    	            System.exit(1);
    	        }
        
    	       System.out.println("connection established");
        Log.d(null, "msg83");
        
      
   	
   	 	
	}
	public  static void communicate(String firstcommand) {
		
	try {
		if(in.read()==-1){
			SecondScreenActivity foo = new SecondScreenActivity();
            foo.error();
			
			Server.setupconnection();
		}
	} catch (IOException e1) {
		// TODO Auto-generated catch block
		e1.printStackTrace();
	}
			
		
		
   	if (firstcommand.equals("Bye.")) {
   		out.close(); 
   	    try {
			in.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} 
   	    try {
			echoSocket.close();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
   	  
		
	}else {
		out.println(firstcommand);
	}
	
	
   	
   	
	}
	
	public static String[] GetCommandsfromData()
	{
		String ReceivedData;
		String[] Commands;
		char[] buffer = new char[100];
		int i = 0;
		do{
			i++;
			if (i>5){
				SecondScreenActivity foo = new SecondScreenActivity();
	            foo.error();
	            i=0;
			}
		
		try {
			in.read(buffer);
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		ReceivedData = new String(buffer).trim();
		Commands = ReceivedData.split("\\.");
	}while (Commands!= null);
		return Commands;
	}
			
	}
	



	
